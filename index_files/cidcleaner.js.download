const ipfshttp = (uri) => {
  if (uri.startsWith("ipfs://")) {
    uri = uri.replace("ipfs://", "")   
  }
  if (uri.startsWith("ipfs/")) {
    uri = uri.replace("ipfs/", "")
  }
  return `https://ipfs.io/ipfs/${uri}`
}
const hex2cid = (hex) => {
  console.log("before hex", hex)
  hex = "1220" + hex.slice(2)
  console.log("hex = ", hex)
  let arr = new Uint8Array(hex.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));
  console.log("arr = ", arr)
  return new Cids(1, 'raw', arr).toV1().toString()
  //return new Cids(arr).toV1().toString()
}
const cid2hex = (cid) => {
  if (cid && cid.length > 0) {
    let v1 = new Cids(cid)
    console.log("v1", v1)
    let bytes = v1.multihash
    bytes = bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');
    return "0x" + bytes.slice(4)
  } else {
    return "0x00"
  }
}
