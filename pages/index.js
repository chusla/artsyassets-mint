
<!-- saved from url=(0087)https://testnet.factoria.app/f0/mint#address=0x9458AF84636944C6e2701278cb108A0c01eA2999 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252"><meta name="color-scheme" content="light dark"></head><body><div class="line-gutter-backdrop"></div><form autocomplete="off"><label class="line-wrap-control">Line wrap<input type="checkbox" aria-label="Line wrap"></label></form><table><tbody><tr><td class="line-number" value="1"></td><td class="line-content"><span class="html-tag">&lt;html&gt;</span></td></tr><tr><td class="line-number" value="2"></td><td class="line-content"><span class="html-tag">&lt;head&gt;</span></td></tr><tr><td class="line-number" value="3"></td><td class="line-content"><span class="html-tag">&lt;title&gt;</span>factoria for ethereum testnet<span class="html-tag">&lt;/title&gt;</span></td></tr><tr><td class="line-number" value="4"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">viewport</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">width=device-width, initial-scale=1</span>"&gt;</span></td></tr><tr><td class="line-number" value="5"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">twitter:card</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">summary_large_image</span>" /&gt;</span></td></tr><tr><td class="line-number" value="6"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">twitter:title</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">factoria for ethereum testnet</span>" /&gt;</span></td></tr><tr><td class="line-number" value="7"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">twitter:description</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">Decentralized NFT Collection Factory</span>" /&gt;</span></td></tr><tr><td class="line-number" value="8"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">twitter:image</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">https://rinkeby.factoria.app/_factoria.png</span>" /&gt;</span></td></tr><tr><td class="line-number" value="9"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">property</span>="<span class="html-attribute-value">og:url</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">https://rinkeby.factoria.app</span>" /&gt;</span></td></tr><tr><td class="line-number" value="10"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">property</span>="<span class="html-attribute-value">og:type</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">website</span>" /&gt;</span></td></tr><tr><td class="line-number" value="11"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">property</span>="<span class="html-attribute-value">og:title</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">factoria for ethereum testnet</span>" /&gt;</span></td></tr><tr><td class="line-number" value="12"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">property</span>="<span class="html-attribute-value">og:description</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">Decentralized NFT Collection Factory</span>" /&gt;</span></td></tr><tr><td class="line-number" value="13"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">property</span>="<span class="html-attribute-value">og:image</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">https://rinkeby.factoria.app/_factoria.png</span>" /&gt;</span></td></tr><tr><td class="line-number" value="14"></td><td class="line-content"><span class="html-tag">&lt;link <span class="html-attribute-name">href</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css" rel="noreferrer noopener">https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css</a>" <span class="html-attribute-name">rel</span>="<span class="html-attribute-value">stylesheet</span>"&gt;</span></td></tr><tr><td class="line-number" value="15"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" rel="noreferrer noopener">https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="16"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdn.jsdelivr.net/npm/sweetalert2@11" rel="noreferrer noopener">//cdn.jsdelivr.net/npm/sweetalert2@11</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="17"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js" rel="noreferrer noopener">https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="18"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdnjs.cloudflare.com/ajax/libs/progressbar.js/1.1.0/progressbar.min.js" rel="noreferrer noopener">https://cdnjs.cloudflare.com/ajax/libs/progressbar.js/1.1.0/progressbar.min.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="19"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdn.jsdelivr.net/gh/ethereum/web3.js@3.0.0/dist/web3.min.js" rel="noreferrer noopener">https://cdn.jsdelivr.net/gh/ethereum/web3.js@3.0.0/dist/web3.min.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="20"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://unpkg.com/cids@1.1.4/dist/index.min.js" rel="noreferrer noopener">https://unpkg.com/cids@1.1.4/dist/index.min.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="21"></td><td class="line-content"><span class="html-tag">&lt;link <span class="html-attribute-name">href</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/style.css" rel="noreferrer noopener">style.css</a>" <span class="html-attribute-name">rel</span>="<span class="html-attribute-value">stylesheet</span>"&gt;</span></td></tr><tr><td class="line-number" value="22"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/token_abi.js" rel="noreferrer noopener">token_abi.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="23"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/methods.js" rel="noreferrer noopener">methods.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="24"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/hashparser.js" rel="noreferrer noopener">hashparser.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="25"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/page.js" rel="noreferrer noopener">page.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="26"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/whitelist.js" rel="noreferrer noopener">whitelist.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="27"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/fetcher.js" rel="noreferrer noopener">fetcher.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="28"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/progress.js" rel="noreferrer noopener">progress.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="29"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/config.js" rel="noreferrer noopener">config.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="30"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>='<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/cidcleaner.js" rel="noreferrer noopener">cidcleaner.js</a>'&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="31"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/templates/marketplaceItems.js" rel="noreferrer noopener">templates/marketplaceItems.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="32"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/templates/formItems.js" rel="noreferrer noopener">templates/formItems.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="33"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/templates/cardItems.js" rel="noreferrer noopener">templates/cardItems.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="34"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/templates/inviteItems.js" rel="noreferrer noopener">templates/inviteItems.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="35"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/templates/fillerItem.js" rel="noreferrer noopener">templates/fillerItem.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="36"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://testnet.factoria.app/f0/templates/btnItems.js" rel="noreferrer noopener">templates/btnItems.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="37"></td><td class="line-content"><span class="html-tag">&lt;script&gt;</span></td></tr><tr><td class="line-number" value="38"></td><td class="line-content">var web3 = new Web3(window.ethereum)</td></tr><tr><td class="line-number" value="39"></td><td class="line-content">const all = "0x0000000000000000000000000000000000000000000000000000000000000000"</td></tr><tr><td class="line-number" value="40"></td><td class="line-content">const fromHex = hexString =&gt;</td></tr><tr><td class="line-number" value="41"></td><td class="line-content">  new Uint8Array(hexString.match(/.{1,2}/g).map(byte =&gt; parseInt(byte, 16)));</td></tr><tr><td class="line-number" value="42"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="43"></td><td class="line-content">const proof = async (key, cid, account) =&gt; {</td></tr><tr><td class="line-number" value="44"></td><td class="line-content">  if (key === all) {</td></tr><tr><td class="line-number" value="45"></td><td class="line-content">    return []</td></tr><tr><td class="line-number" value="46"></td><td class="line-content">  } else {</td></tr><tr><td class="line-number" value="47"></td><td class="line-content">    //let addresses = await fetch(`https://gateway.pinata.cloud/ipfs/${cid}`).then((res) =&gt; {</td></tr><tr><td class="line-number" value="48"></td><td class="line-content">    let invite = await fetch(`https://ipfs.io/ipfs/${cid}`).then((res) =&gt; {</td></tr><tr><td class="line-number" value="49"></td><td class="line-content">      return res.json()</td></tr><tr><td class="line-number" value="50"></td><td class="line-content">    })</td></tr><tr><td class="line-number" value="51"></td><td class="line-content">    let whitelist = new Whitelist(invite.addresses)</td></tr><tr><td class="line-number" value="52"></td><td class="line-content">    let root = whitelist.root()</td></tr><tr><td class="line-number" value="53"></td><td class="line-content">    if (key !== root) {</td></tr><tr><td class="line-number" value="54"></td><td class="line-content">      alert('invalid merkle root')</td></tr><tr><td class="line-number" value="55"></td><td class="line-content">      return</td></tr><tr><td class="line-number" value="56"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="57"></td><td class="line-content">    let _proof = whitelist.proof(account)</td></tr><tr><td class="line-number" value="58"></td><td class="line-content">    console.log("proof = ", _proof)</td></tr><tr><td class="line-number" value="59"></td><td class="line-content">    let isvalid = whitelist.verify(account, _proof)</td></tr><tr><td class="line-number" value="60"></td><td class="line-content">    if (!isvalid) {</td></tr><tr><td class="line-number" value="61"></td><td class="line-content">      alert('the account not included in the group')</td></tr><tr><td class="line-number" value="62"></td><td class="line-content">      return</td></tr><tr><td class="line-number" value="63"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="64"></td><td class="line-content">    return _proof</td></tr><tr><td class="line-number" value="65"></td><td class="line-content">  }</td></tr><tr><td class="line-number" value="66"></td><td class="line-content">}</td></tr><tr><td class="line-number" value="67"></td><td class="line-content">document.addEventListener("DOMContentLoaded", async () =&gt; {</td></tr><tr><td class="line-number" value="68"></td><td class="line-content">  let progressbar = new Progress("body")</td></tr><tr><td class="line-number" value="69"></td><td class="line-content">  let token = new Token(token_abi, Params.address, web3)</td></tr><tr><td class="line-number" value="70"></td><td class="line-content">  await token.init()</td></tr><tr><td class="line-number" value="71"></td><td class="line-content">  let name = await token.name().call()</td></tr><tr><td class="line-number" value="72"></td><td class="line-content">  let symbol = await token.symbol().call()</td></tr><tr><td class="line-number" value="73"></td><td class="line-content">  // config := { base, placeholder, supply }</td></tr><tr><td class="line-number" value="74"></td><td class="line-content">  document.querySelector("#title").innerHTML = `${name} (${symbol})`</td></tr><tr><td class="line-number" value="75"></td><td class="line-content">  document.querySelector("#address").innerHTML = Params.address</td></tr><tr><td class="line-number" value="76"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="77"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="78"></td><td class="line-content">  let config = await token.config().call()</td></tr><tr><td class="line-number" value="79"></td><td class="line-content">  let nextId = await token.nextId().call()</td></tr><tr><td class="line-number" value="80"></td><td class="line-content">  nextId = parseInt(nextId)</td></tr><tr><td class="line-number" value="81"></td><td class="line-content">  let permanent = config.permanent</td></tr><tr><td class="line-number" value="82"></td><td class="line-content">  let html = formItems({</td></tr><tr><td class="line-number" value="83"></td><td class="line-content">    items: [{</td></tr><tr><td class="line-number" value="84"></td><td class="line-content">      key: "permanent", value: permanent, editable: false</td></tr><tr><td class="line-number" value="85"></td><td class="line-content">    }, {</td></tr><tr><td class="line-number" value="86"></td><td class="line-content">      key: "total supply", value: config.supply, editable: false</td></tr><tr><td class="line-number" value="87"></td><td class="line-content">    }, {</td></tr><tr><td class="line-number" value="88"></td><td class="line-content">      key: "mint status", value: nextId-1, editable: false</td></tr><tr><td class="line-number" value="89"></td><td class="line-content">    }]</td></tr><tr><td class="line-number" value="90"></td><td class="line-content">  })</td></tr><tr><td class="line-number" value="91"></td><td class="line-content">  document.querySelector(".form-items").innerHTML = html</td></tr><tr><td class="line-number" value="92"></td><td class="line-content">  const options = {</td></tr><tr><td class="line-number" value="93"></td><td class="line-content">    address: Params.address,</td></tr><tr><td class="line-number" value="94"></td><td class="line-content">    fromBlock: 0,</td></tr><tr><td class="line-number" value="95"></td><td class="line-content">    toBlock  : "latest",</td></tr><tr><td class="line-number" value="96"></td><td class="line-content">  };</td></tr><tr><td class="line-number" value="97"></td><td class="line-content">  let invites = await token.logs("Invited", options).then((items) =&gt; {</td></tr><tr><td class="line-number" value="98"></td><td class="line-content">    return items.map((r) =&gt; {</td></tr><tr><td class="line-number" value="99"></td><td class="line-content">      let i = r.returnValues</td></tr><tr><td class="line-number" value="100"></td><td class="line-content">      console.log("i", i)</td></tr><tr><td class="line-number" value="101"></td><td class="line-content">      i.blockNumber = r.blockNumber</td></tr><tr><td class="line-number" value="102"></td><td class="line-content">      i.blockHash = r.blockHash</td></tr><tr><td class="line-number" value="103"></td><td class="line-content">      return i</td></tr><tr><td class="line-number" value="104"></td><td class="line-content">    })</td></tr><tr><td class="line-number" value="105"></td><td class="line-content">  })</td></tr><tr><td class="line-number" value="106"></td><td class="line-content">  console.log("invites", invites)</td></tr><tr><td class="line-number" value="107"></td><td class="line-content">  let inviteList = []</td></tr><tr><td class="line-number" value="108"></td><td class="line-content">  let keySet = new Set()</td></tr><tr><td class="line-number" value="109"></td><td class="line-content">  console.log("keySet", keySet)</td></tr><tr><td class="line-number" value="110"></td><td class="line-content">  for(let invite of invites) {</td></tr><tr><td class="line-number" value="111"></td><td class="line-content">    if (!keySet.has(invite.key)) {</td></tr><tr><td class="line-number" value="112"></td><td class="line-content">//      let i = invite</td></tr><tr><td class="line-number" value="113"></td><td class="line-content">      let i = await token.invite(invite.key).call()</td></tr><tr><td class="line-number" value="114"></td><td class="line-content">      i.key = invite.key</td></tr><tr><td class="line-number" value="115"></td><td class="line-content">      i.cid = invite.cid</td></tr><tr><td class="line-number" value="116"></td><td class="line-content">      if (i.key === "0x0000000000000000000000000000000000000000000000000000000000000000") {</td></tr><tr><td class="line-number" value="117"></td><td class="line-content">      } else {</td></tr><tr><td class="line-number" value="118"></td><td class="line-content">        console.log("i = ", i)</td></tr><tr><td class="line-number" value="119"></td><td class="line-content">        console.log("before", i.cid)</td></tr><tr><td class="line-number" value="120"></td><td class="line-content">        console.log("uiint", fromHex("1220" + i.cid))</td></tr><tr><td class="line-number" value="121"></td><td class="line-content">        i.cid = hex2cid(i.cid)</td></tr><tr><td class="line-number" value="122"></td><td class="line-content">        console.log("after", i.cid)</td></tr><tr><td class="line-number" value="123"></td><td class="line-content">        let r = await fetcher.get(`https://ipfs.io/ipfs/${i.cid}`).then((r) =&gt; {</td></tr><tr><td class="line-number" value="124"></td><td class="line-content">          return r.json()</td></tr><tr><td class="line-number" value="125"></td><td class="line-content">        }).catch((e) =&gt; { })</td></tr><tr><td class="line-number" value="126"></td><td class="line-content">        if (r) {</td></tr><tr><td class="line-number" value="127"></td><td class="line-content">          i.addresses = r.addresses.map((a) =&gt; {</td></tr><tr><td class="line-number" value="128"></td><td class="line-content">            return a.toLowerCase()</td></tr><tr><td class="line-number" value="129"></td><td class="line-content">          })</td></tr><tr><td class="line-number" value="130"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="131"></td><td class="line-content">      }</td></tr><tr><td class="line-number" value="132"></td><td class="line-content">      inviteList.push(i)</td></tr><tr><td class="line-number" value="133"></td><td class="line-content">      keySet.add(invite.key)</td></tr><tr><td class="line-number" value="134"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="135"></td><td class="line-content">  }</td></tr><tr><td class="line-number" value="136"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="137"></td><td class="line-content">  console.log("inviteList", inviteList)</td></tr><tr><td class="line-number" value="138"></td><td class="line-content">  let myInvites = inviteList.filter((list) =&gt; {</td></tr><tr><td class="line-number" value="139"></td><td class="line-content">    if (list.addresses &amp;&amp; list.addresses.includes(token.account.toLowerCase())) {</td></tr><tr><td class="line-number" value="140"></td><td class="line-content">      return true</td></tr><tr><td class="line-number" value="141"></td><td class="line-content">    } else if (list.key === "0x0000000000000000000000000000000000000000000000000000000000000000") {</td></tr><tr><td class="line-number" value="142"></td><td class="line-content">      return true</td></tr><tr><td class="line-number" value="143"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="144"></td><td class="line-content">    return false;</td></tr><tr><td class="line-number" value="145"></td><td class="line-content">  })</td></tr><tr><td class="line-number" value="146"></td><td class="line-content">  console.log("myInvites", myInvites)</td></tr><tr><td class="line-number" value="147"></td><td class="line-content">  if (myInvites.length &gt; 0) {</td></tr><tr><td class="line-number" value="148"></td><td class="line-content">    let inviteHtml = inviteItems({</td></tr><tr><td class="line-number" value="149"></td><td class="line-content">      items: myInvites.map((item) =&gt; {</td></tr><tr><td class="line-number" value="150"></td><td class="line-content">        let startStr</td></tr><tr><td class="line-number" value="151"></td><td class="line-content">        if (parseInt(item.start) * 1000 &lt; Date.now()) {</td></tr><tr><td class="line-number" value="152"></td><td class="line-content">          startStr = "started"</td></tr><tr><td class="line-number" value="153"></td><td class="line-content">        } else {</td></tr><tr><td class="line-number" value="154"></td><td class="line-content">          startStr = moment(parseInt(item.start) * 1000).format("YYYY-MM-DD HH:mm")</td></tr><tr><td class="line-number" value="155"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="156"></td><td class="line-content">        return {</td></tr><tr><td class="line-number" value="157"></td><td class="line-content">          cid: item.cid,</td></tr><tr><td class="line-number" value="158"></td><td class="line-content">          key: item.key,</td></tr><tr><td class="line-number" value="159"></td><td class="line-content">          name: (item.key === "0x0000000000000000000000000000000000000000000000000000000000000000" ? "Everyone" : item.key),</td></tr><tr><td class="line-number" value="160"></td><td class="line-content">          limit: item.limit,</td></tr><tr><td class="line-number" value="161"></td><td class="line-content">          price: item.price,</td></tr><tr><td class="line-number" value="162"></td><td class="line-content">          priceStr: `${parseInt(item.price)/Math.pow(10, 18)} ETH`,</td></tr><tr><td class="line-number" value="163"></td><td class="line-content">          startStr: startStr,</td></tr><tr><td class="line-number" value="164"></td><td class="line-content">          start: item.start</td></tr><tr><td class="line-number" value="165"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="166"></td><td class="line-content">      })</td></tr><tr><td class="line-number" value="167"></td><td class="line-content">    })</td></tr><tr><td class="line-number" value="168"></td><td class="line-content">    let mintOptionsHeader = `&lt;hr&gt;&lt;div class='margin-bottom-m'&gt;</td></tr><tr><td class="line-number" value="169"></td><td class="line-content">  &lt;h1&gt;mint options&lt;/h1&gt;</td></tr><tr><td class="line-number" value="170"></td><td class="line-content">  &lt;div class='margin-top-s margin-bottom-m'&gt;you can mint using one of the following invite conditions&lt;/div&gt;</td></tr><tr><td class="line-number" value="171"></td><td class="line-content">&lt;/div&gt;`</td></tr><tr><td class="line-number" value="172"></td><td class="line-content">    document.querySelector(".mint-options").innerHTML = mintOptionsHeader + inviteHtml</td></tr><tr><td class="line-number" value="173"></td><td class="line-content">    document.querySelector(".mint-options").addEventListener("click", async (e) =&gt; {</td></tr><tr><td class="line-number" value="174"></td><td class="line-content">      let target = e.target.closest(".mint")</td></tr><tr><td class="line-number" value="175"></td><td class="line-content">      console.log("target", target)</td></tr><tr><td class="line-number" value="176"></td><td class="line-content">      if (!target) {</td></tr><tr><td class="line-number" value="177"></td><td class="line-content">        if (e.target.classList.contains("mint")) {</td></tr><tr><td class="line-number" value="178"></td><td class="line-content">          target = e.target</td></tr><tr><td class="line-number" value="179"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="180"></td><td class="line-content">      }</td></tr><tr><td class="line-number" value="181"></td><td class="line-content">      if (target) {</td></tr><tr><td class="line-number" value="182"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="183"></td><td class="line-content">        let cid = target.getAttribute("data-cid")</td></tr><tr><td class="line-number" value="184"></td><td class="line-content">        let key = target.getAttribute("data-key")</td></tr><tr><td class="line-number" value="185"></td><td class="line-content">        let limit = target.getAttribute("data-limit")</td></tr><tr><td class="line-number" value="186"></td><td class="line-content">        let priceStr = target.getAttribute("data-price-str")</td></tr><tr><td class="line-number" value="187"></td><td class="line-content">        let price = target.getAttribute("data-price")</td></tr><tr><td class="line-number" value="188"></td><td class="line-content">        let merkleProof = await proof(key, cid, token.account)</td></tr><tr><td class="line-number" value="189"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="190"></td><td class="line-content">        console.log('merkle proof' , merkleProof)</td></tr><tr><td class="line-number" value="191"></td><td class="line-content">        console.log('merkle root' , key)</td></tr><tr><td class="line-number" value="192"></td><td class="line-content">        let r = await Swal.fire({</td></tr><tr><td class="line-number" value="193"></td><td class="line-content">          title: "Mint",</td></tr><tr><td class="line-number" value="194"></td><td class="line-content">          html: `&lt;div class='mint-desc'&gt;Mint up to ${limit} tokens at ${priceStr}&lt;/div&gt;</td></tr><tr><td class="line-number" value="195"></td><td class="line-content">  &lt;form class='mint-form'&gt;</td></tr><tr><td class="line-number" value="196"></td><td class="line-content">  &lt;div class='form-item'&gt;</td></tr><tr><td class="line-number" value="197"></td><td class="line-content">    &lt;small class='margin-bottom-s'&gt;Number of tokens to mint&lt;/small&gt;</td></tr><tr><td class="line-number" value="198"></td><td class="line-content">    &lt;input type='text' id='mint-count'&gt;</td></tr><tr><td class="line-number" value="199"></td><td class="line-content">  &lt;/div&gt;</td></tr><tr><td class="line-number" value="200"></td><td class="line-content">      &lt;/form&gt;`,</td></tr><tr><td class="line-number" value="201"></td><td class="line-content">          focusConfirm: false,</td></tr><tr><td class="line-number" value="202"></td><td class="line-content">          preConfirm: () =&gt; {</td></tr><tr><td class="line-number" value="203"></td><td class="line-content">            return [</td></tr><tr><td class="line-number" value="204"></td><td class="line-content">              parseInt(document.querySelector("#mint-count").value)</td></tr><tr><td class="line-number" value="205"></td><td class="line-content">            ]</td></tr><tr><td class="line-number" value="206"></td><td class="line-content">          }</td></tr><tr><td class="line-number" value="207"></td><td class="line-content">        })</td></tr><tr><td class="line-number" value="208"></td><td class="line-content">        console.log("r", r)</td></tr><tr><td class="line-number" value="209"></td><td class="line-content">        let count = r.value[0]</td></tr><tr><td class="line-number" value="210"></td><td class="line-content">        console.log('count', count)</td></tr><tr><td class="line-number" value="211"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="212"></td><td class="line-content">        if (count &gt; limit) {</td></tr><tr><td class="line-number" value="213"></td><td class="line-content">          alert("mint limit exceeded")</td></tr><tr><td class="line-number" value="214"></td><td class="line-content">        } else {</td></tr><tr><td class="line-number" value="215"></td><td class="line-content">          // get tokenIds</td></tr><tr><td class="line-number" value="216"></td><td class="line-content">          let i = 1;</td></tr><tr><td class="line-number" value="217"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="218"></td><td class="line-content">          console.log("nextId", nextId, config.supply, nextId + count - 1)</td></tr><tr><td class="line-number" value="219"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="220"></td><td class="line-content">          if (nextId + count - 1 &gt; config.supply) {</td></tr><tr><td class="line-number" value="221"></td><td class="line-content">            alert("Not enough mintable tokens left in the collection")</td></tr><tr><td class="line-number" value="222"></td><td class="line-content">            return;</td></tr><tr><td class="line-number" value="223"></td><td class="line-content">          }</td></tr><tr><td class="line-number" value="224"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="225"></td><td class="line-content">          console.log("args")</td></tr><tr><td class="line-number" value="226"></td><td class="line-content">          console.log("account", token.account)</td></tr><tr><td class="line-number" value="227"></td><td class="line-content">          console.log("key", key)</td></tr><tr><td class="line-number" value="228"></td><td class="line-content">          console.log("proof", merkleProof)</td></tr><tr><td class="line-number" value="229"></td><td class="line-content">          console.log("price", price)</td></tr><tr><td class="line-number" value="230"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="231"></td><td class="line-content">          await progressbar.set(null, "minting...")</td></tr><tr><td class="line-number" value="232"></td><td class="line-content">          try {</td></tr><tr><td class="line-number" value="233"></td><td class="line-content">            let auth = {</td></tr><tr><td class="line-number" value="234"></td><td class="line-content">              key: key,</td></tr><tr><td class="line-number" value="235"></td><td class="line-content">              proof: merkleProof</td></tr><tr><td class="line-number" value="236"></td><td class="line-content">            }</td></tr><tr><td class="line-number" value="237"></td><td class="line-content">            let tx = await token.mint(auth, count).send({</td></tr><tr><td class="line-number" value="238"></td><td class="line-content">              from: token.account,</td></tr><tr><td class="line-number" value="239"></td><td class="line-content">              value: price * count</td></tr><tr><td class="line-number" value="240"></td><td class="line-content">            })</td></tr><tr><td class="line-number" value="241"></td><td class="line-content">            debugger;</td></tr><tr><td class="line-number" value="242"></td><td class="line-content">            await progressbar.hide()</td></tr><tr><td class="line-number" value="243"></td><td class="line-content">            //location.reload()</td></tr><tr><td class="line-number" value="244"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="245"></td><td class="line-content">            let opensea;</td></tr><tr><td class="line-number" value="246"></td><td class="line-content">            let rarible;</td></tr><tr><td class="line-number" value="247"></td><td class="line-content">            if (Config.network === "rinkeby") {</td></tr><tr><td class="line-number" value="248"></td><td class="line-content">              opensea = "https://testnets.opensea.io"</td></tr><tr><td class="line-number" value="249"></td><td class="line-content">              rarible = "https://rinkeby.rarible.com"</td></tr><tr><td class="line-number" value="250"></td><td class="line-content">            } else if (Config.network === "mainnet") {</td></tr><tr><td class="line-number" value="251"></td><td class="line-content">              opensea = "https://opensea.io"</td></tr><tr><td class="line-number" value="252"></td><td class="line-content">              rarible = "https://rarible.com"</td></tr><tr><td class="line-number" value="253"></td><td class="line-content">            }</td></tr><tr><td class="line-number" value="254"></td><td class="line-content">            console.log("tx", tx)</td></tr><tr><td class="line-number" value="255"></td><td class="line-content">            let T = (Array.isArray(tx.events.Transfer) ? tx.events.Transfer : [tx.events.Transfer])</td></tr><tr><td class="line-number" value="256"></td><td class="line-content">            let tokenIds = T.map((t) =&gt; {</td></tr><tr><td class="line-number" value="257"></td><td class="line-content">              return parseInt(t.returnValues.tokenId)</td></tr><tr><td class="line-number" value="258"></td><td class="line-content">            })</td></tr><tr><td class="line-number" value="259"></td><td class="line-content">            document.querySelector(".marketplaces").innerHTML = marketplaceItems.tokens({</td></tr><tr><td class="line-number" value="260"></td><td class="line-content">              items: tokenIds.map((tokenId) =&gt; {</td></tr><tr><td class="line-number" value="261"></td><td class="line-content">                return {</td></tr><tr><td class="line-number" value="262"></td><td class="line-content">                  opensea,</td></tr><tr><td class="line-number" value="263"></td><td class="line-content">                  rarible,</td></tr><tr><td class="line-number" value="264"></td><td class="line-content">                  address: Params.address,</td></tr><tr><td class="line-number" value="265"></td><td class="line-content">                  tokenId: tokenId</td></tr><tr><td class="line-number" value="266"></td><td class="line-content">                }</td></tr><tr><td class="line-number" value="267"></td><td class="line-content">              })</td></tr><tr><td class="line-number" value="268"></td><td class="line-content">            })</td></tr><tr><td class="line-number" value="269"></td><td class="line-content">          } catch (e) {</td></tr><tr><td class="line-number" value="270"></td><td class="line-content">            console.log("ERROR", e)</td></tr><tr><td class="line-number" value="271"></td><td class="line-content">          }</td></tr><tr><td class="line-number" value="272"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="273"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="274"></td><td class="line-content">      }</td></tr><tr><td class="line-number" value="275"></td><td class="line-content">    })</td></tr><tr><td class="line-number" value="276"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="277"></td><td class="line-content">  } else {</td></tr><tr><td class="line-number" value="278"></td><td class="line-content">    let owner = await token.owner().call()</td></tr><tr><td class="line-number" value="279"></td><td class="line-content">    let adminText = ""</td></tr><tr><td class="line-number" value="280"></td><td class="line-content">    if (token.account.toLowerCase() === owner.toLowerCase()) {</td></tr><tr><td class="line-number" value="281"></td><td class="line-content">      adminText = `&lt;br&gt;</td></tr><tr><td class="line-number" value="282"></td><td class="line-content">&lt;blockquote&gt;</td></tr><tr><td class="line-number" value="283"></td><td class="line-content">  &lt;div&gt;&lt;i class="fa-solid fa-circle-info"&gt;&lt;/i&gt; YOU ARE THE ADMIN&lt;/div&gt;</td></tr><tr><td class="line-number" value="284"></td><td class="line-content">  &lt;br&gt;</td></tr><tr><td class="line-number" value="285"></td><td class="line-content">  &lt;div&gt;1. You can &lt;a href="contract/invites#address=${Params.address}"&gt;privately invite addresses&lt;/a&gt; to allow minting&lt;/div&gt;</td></tr><tr><td class="line-number" value="286"></td><td class="line-content">  &lt;div&gt;2. You can &lt;a href="contract/invites#address=${Params.address}&amp;key=*"&gt;open up minting to the public&lt;/a&gt;&lt;/div&gt;</td></tr><tr><td class="line-number" value="287"></td><td class="line-content">&lt;/blockquote&gt;`</td></tr><tr><td class="line-number" value="288"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="289"></td><td class="line-content">    document.querySelector(".mint-options").innerHTML = `&lt;div class='explain'&gt;</td></tr><tr><td class="line-number" value="290"></td><td class="line-content">  &lt;div&gt;This collection is not yet public, and you don't have an invite&lt;/div&gt;${adminText}</td></tr><tr><td class="line-number" value="291"></td><td class="line-content">&lt;/div&gt;`</td></tr><tr><td class="line-number" value="292"></td><td class="line-content">  }</td></tr><tr><td class="line-number" value="293"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="294"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="295"></td><td class="line-content">})</td></tr><tr><td class="line-number" value="296"></td><td class="line-content"><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="297"></td><td class="line-content"><span class="html-tag">&lt;/head&gt;</span></td></tr><tr><td class="line-number" value="298"></td><td class="line-content"><span class="html-tag">&lt;body <span class="html-attribute-name">class</span>='<span class="html-attribute-value">public</span>'&gt;</span></td></tr><tr><td class="line-number" value="299"></td><td class="line-content"><span class="html-tag">&lt;div <span class="html-attribute-name">class</span>='<span class="html-attribute-value">container</span>'&gt;</span></td></tr><tr><td class="line-number" value="300"></td><td class="line-content"><span class="html-tag">&lt;div <span class="html-attribute-name">class</span>='<span class="html-attribute-value">main mini</span>'&gt;</span></td></tr><tr><td class="line-number" value="301"></td><td class="line-content">  <span class="html-tag">&lt;header <span class="html-attribute-name">class</span>='<span class="html-attribute-value">form</span>'&gt;</span></td></tr><tr><td class="line-number" value="302"></td><td class="line-content">    <span class="html-tag">&lt;h1 <span class="html-attribute-name">id</span>='<span class="html-attribute-value">title</span>' <span class="html-attribute-name">class</span>='<span class="html-attribute-value">align-center</span>'&gt;</span><span class="html-tag">&lt;/h1&gt;</span></td></tr><tr><td class="line-number" value="303"></td><td class="line-content">    <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>='<span class="html-attribute-value">address</span>'&gt;</span><span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="304"></td><td class="line-content">    <span class="html-tag">&lt;div <span class="html-attribute-name">class</span>='<span class="html-attribute-value">form-items</span>'&gt;</span><span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="305"></td><td class="line-content">    <span class="html-comment">&lt;!--</span></td></tr><tr><td class="line-number" value="306"></td><td class="line-content"><span class="html-comment">    &lt;div class='margin-bottom-m'&gt;</span></td></tr><tr><td class="line-number" value="307"></td><td class="line-content"><span class="html-comment">      &lt;h1&gt;mint options&lt;/h1&gt;</span></td></tr><tr><td class="line-number" value="308"></td><td class="line-content"><span class="html-comment">      &lt;div class='margin-top-s margin-bottom-m'&gt;you can mint using one of the following invite conditions&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="309"></td><td class="line-content"><span class="html-comment">    &lt;/div&gt;</span></td></tr><tr><td class="line-number" value="310"></td><td class="line-content"><span class="html-comment">    --&gt;</span></td></tr><tr><td class="line-number" value="311"></td><td class="line-content">    <span class="html-tag">&lt;div <span class="html-attribute-name">class</span>='<span class="html-attribute-value">mint-options</span>'&gt;</span><span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="312"></td><td class="line-content">    <span class="html-tag">&lt;form <span class="html-attribute-name">class</span>='<span class="html-attribute-value">mint-form hidden</span>'&gt;</span></td></tr><tr><td class="line-number" value="313"></td><td class="line-content">      <span class="html-tag">&lt;input <span class="html-attribute-name">type</span>='<span class="html-attribute-value">number</span>' <span class="html-attribute-name">placeholder</span>='<span class="html-attribute-value">select the number of tokens to mint</span>'&gt;</span></td></tr><tr><td class="line-number" value="314"></td><td class="line-content">      <span class="html-tag">&lt;input <span class="html-attribute-name">type</span>='<span class="html-attribute-value">submit</span>' <span class="html-attribute-name">class</span>='<span class="html-attribute-value">btn</span>' <span class="html-attribute-name">value</span>='<span class="html-attribute-value">Mint</span>'&gt;</span></td></tr><tr><td class="line-number" value="315"></td><td class="line-content">    <span class="html-tag">&lt;/form&gt;</span></td></tr><tr><td class="line-number" value="316"></td><td class="line-content">    <span class="html-tag">&lt;hr&gt;</span></td></tr><tr><td class="line-number" value="317"></td><td class="line-content">    <span class="html-tag">&lt;div <span class="html-attribute-name">class</span>='<span class="html-attribute-value">marketplaces</span>'&gt;</span><span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="318"></td><td class="line-content">  <span class="html-tag">&lt;/header&gt;</span></td></tr><tr><td class="line-number" value="319"></td><td class="line-content"><span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="320"></td><td class="line-content"><span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="321"></td><td class="line-content"><span class="html-tag">&lt;/body&gt;</span></td></tr><tr><td class="line-number" value="322"></td><td class="line-content"><span class="html-tag">&lt;/html&gt;</span></td></tr><tr><td class="line-number" value="323"></td><td class="line-content"><span class="html-end-of-file"></span></td></tr></tbody></table></body></html>
